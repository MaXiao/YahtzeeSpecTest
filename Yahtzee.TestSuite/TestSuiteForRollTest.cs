//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yahtzee.TestSuite {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3130.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class TestSuiteForRollTest : VsTestClassBase {
        
        public TestSuiteForRollTest() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Test Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize() {
            this.InitializeTestManager();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestCleanup() {
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void TestSuiteForRollTestS0() {
            this.Manager.BeginTest("TestSuiteForRollTestS0");
            this.Manager.Comment("reaching state \'S0\'");
            this.Manager.Comment("executing step \'call NewGame()\'");
            SUT.NewGame();
            this.Manager.Comment("reaching state \'S1\'");
            this.Manager.Comment("checking step \'return NewGame\'");
            this.Manager.Comment("reaching state \'S2\'");
            bool temp0;
            this.Manager.Comment("executing step \'call RollAll(5,5,1,1,4)\'");
            temp0 = SUT.RollAll(5, 5, 1, 1, 4);
            this.Manager.Comment("reaching state \'S3\'");
            this.Manager.Comment("checking step \'return RollAll/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp0, "return of RollAll, state S3");
            this.Manager.Comment("reaching state \'S4\'");
            bool temp1;
            this.Manager.Comment("executing step \'call RollAll(2,5,3,5,5)\'");
            temp1 = SUT.RollAll(2, 5, 3, 5, 5);
            this.Manager.Comment("reaching state \'S5\'");
            this.Manager.Comment("checking step \'return RollAll/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp1, "return of RollAll, state S5");
            this.Manager.Comment("reaching state \'S6\'");
            bool temp2;
            this.Manager.Comment("executing step \'call RollAll(5,1,1,1,6)\'");
            temp2 = SUT.RollAll(5, 1, 1, 1, 6);
            this.Manager.Comment("reaching state \'S7\'");
            this.Manager.Comment("checking step \'return RollAll/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp2, "return of RollAll, state S7");
            this.Manager.Comment("reaching state \'S8\'");
            this.Manager.EndTest();
        }
        #endregion
    }
}
